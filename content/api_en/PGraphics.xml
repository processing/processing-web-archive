<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>PGraphics</name>

<category>Rendering</category>

<subcategory>PGraphics</subcategory>

<type></type>

<example>
<image></image>
<code><![CDATA[
PGraphics pg;

void setup() {
  size(100, 100);
  pg = createGraphics(40, 40);
}

void draw() {
  pg.beginDraw();
  pg.background(100);
  pg.stroke(255);
  pg.line(20, 20, mouseX, mouseY);
  pg.endDraw();
  image(pg, 9, 30); 
  image(pg, 51, 30);
}
]]></code>
</example>

<description><![CDATA[
Main graphics and rendering context, as well as the base API implementation for processing "core". Use this class if you need to draw into an off-screen graphics buffer. A PGraphics object can be constructed with the <b>createGraphics()</b> function. The <b>beginDraw()</b> and <b>endDraw()</b> methods (see above example) are necessary to set up the buffer and to finalize it. The fields and methods for this class are extensive. For a complete list, visit the <a href="http://processing.org/reference/javadoc/core/">developer's reference.</a>
]]></description>

</root>
